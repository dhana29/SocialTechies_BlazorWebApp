@page "/awsperformance"

@using SocialTechies_BlazorWebApp.Data
@using Radzen
@inject AWSDataService AWSDataService

<h1>AWS Monitoring</h1>

<p>This component demonstrates fetching data from an AWS service.</p>

@if (awsData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Maximum</th>
                <th>Unit</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var record in awsData)
            {
                <tr>
                    <td>@record.Timestamp.ToShortDateString()</td>
                    <td>@record.Maximum</td>
                    <td>@record.Unit</td>
                    <td>

                        <div class="col-sm-12 col-lg-8 my-3 my-lg-5">
                            <RadzenArcGauge Style="width: 100%; height: 250px;">
                                <RadzenArcGaugeScale Step="20" Min="0" Max="101" MinorStep="2" Radius="1.5" TickPosition=@tickPosition Y="0.9" Margin="0">
                                    <RadzenArcGaugeScaleValue Value=@record.Maximum ShowValue=true>
                                        <Template Context="pointer">
                                            <h4>
                                                @pointer.Value <sup>km/h</sup>
                                            </h4>
                                        </Template>
                                    </RadzenArcGaugeScaleValue>
                                </RadzenArcGaugeScale>
                            </RadzenArcGauge>
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>


}

@code {
    private SocialTechies_BlazorWebApp.Data.AWSData[] awsData;
    GaugeTickPosition tickPosition = GaugeTickPosition.Outside;

    protected override async Task OnInitializedAsync()
    {
        awsData = await AWSDataService.CPUUtilizationAsync(DateTime.Now);
    }
}
